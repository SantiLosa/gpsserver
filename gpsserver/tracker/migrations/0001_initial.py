# Generated by Django 5.2.5 on 2025-08-26 17:13

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Device",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("imei", models.CharField(db_index=True, max_length=17, unique=True)),
                ("alias", models.CharField(blank=True, max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="FrameRaw",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("seq", models.PositiveIntegerField(blank=True, null=True)),
                ("raw", models.TextField()),
                ("checksum_valid", models.BooleanField(default=False)),
                ("processed", models.BooleanField(default=False)),
                ("error", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "device",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="frames",
                        to="tracker.device",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Position",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("seq", models.PositiveIntegerField()),
                ("timestamp", models.DateTimeField(db_index=True)),
                (
                    "lat",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(-90),
                            django.core.validators.MaxValueValidator(90),
                        ],
                    ),
                ),
                (
                    "lon",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=11,
                        validators=[
                            django.core.validators.MinValueValidator(-180),
                            django.core.validators.MaxValueValidator(180),
                        ],
                    ),
                ),
                ("speed_kmh", models.DecimalField(decimal_places=1, max_digits=6)),
                (
                    "course_deg",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(359),
                        ]
                    ),
                ),
                ("alt_m", models.DecimalField(decimal_places=1, max_digits=7)),
                (
                    "fix",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(3),
                        ]
                    ),
                ),
                ("sats", models.PositiveSmallIntegerField()),
                ("hdop", models.DecimalField(decimal_places=1, max_digits=4)),
                ("odom_km", models.DecimalField(decimal_places=1, max_digits=9)),
                (
                    "fuel_pct",
                    models.DecimalField(
                        decimal_places=1,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("batt_v", models.DecimalField(decimal_places=1, max_digits=5)),
                ("io_hex", models.CharField(max_length=4)),
                ("io_flags", models.JSONField(default=dict)),
                ("extensions", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="positions",
                        to="tracker.device",
                    ),
                ),
                (
                    "frame",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="position",
                        to="tracker.frameraw",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProcessingLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("level", models.CharField(default="INFO", max_length=16)),
                ("message", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "frame",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="tracker.frameraw",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="frameraw",
            index=models.Index(
                fields=["created_at"], name="tracker_fra_created_01abc8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="frameraw",
            index=models.Index(fields=["seq"], name="tracker_fra_seq_3d0c4e_idx"),
        ),
        migrations.AddIndex(
            model_name="position",
            index=models.Index(
                fields=["device", "timestamp"], name="tracker_pos_device__051b61_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="position",
            unique_together={("device", "seq")},
        ),
    ]
